{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = {\n  tickets: [],\n  isLoading: false,\n  error: \"\",\n  replyTicketError: \"\",\n  searchTicketList: [],\n  selectedTicket: {},\n  replyMsg: \"\"\n};\nvar ticketListSlice = createSlice({\n  name: \"ticketList\",\n  initialState: initialState,\n  reducers: {\n    fetchTicketLoading: function fetchTicketLoading(state) {\n      state.isLoading = true;\n    },\n    fetchTicketSuccess: function fetchTicketSuccess(state, action) {\n      state.tickets = action.payload;\n      state.searchTicketList = action.payload;\n      state.isLoading = false;\n    },\n    fetchTicketFail: function fetchTicketFail(state, _ref) {\n      var payload = _ref.payload;\n      state.isLoading = false;\n      state.error = payload;\n    }\n    // searchTickets: (state, { payload }) => {\n    //   state.searchTicketList = state.tickets.filter((row) => {\n    //     if (!payload) return row;\n\n    //     return row.subject.toLowerCase().includes(payload.toLowerCase());\n    //   });\n    // },\n    // fetchSingleTicketLoading: (state) => {\n    //   state.isLoading = true;\n    // },\n    // fetchSingleTicketSuccess: (state, { payload }) => {\n    //   state.selectedTicket = payload;\n    //   state.isLoading = false;\n    //   state.error = \"\";\n    // },\n    // fetchSingleTicketFail: (state, { payload }) => {\n    //   state.isLoading = false;\n    //   state.error = payload;\n    // },\n    // replyTicketLoading: (state) => {\n    //   state.isLoading = true;\n    // },\n    // replyTicketSuccess: (state, { payload }) => {\n    //   state.isLoading = false;\n    //   state.error = \"\";\n    //   state.replyMsg = payload;\n    // },\n    // replyTicketFail: (state, { payload }) => {\n    //   state.isLoading = false;\n    //   state.replyTicketError = payload;\n    // },\n    // closeTicketLoading: (state) => {\n    //   state.isLoading = true;\n    // },\n    // closeTicketSuccess: (state, { payload }) => {\n    //   state.isLoading = false;\n    //   state.error = \"\";\n    //   state.replyMsg = payload;\n    // },\n    // closeTicketFail: (state, { payload }) => {\n    //   state.isLoading = false;\n    //   state.error = payload;\n    // },\n    // resetResponseMsg: (state) => {\n    //   state.isLoading = false;\n    //   state.replyTicketError = \"\";\n    //   state.replyMsg = \"\";\n    // },\n  }\n});\nvar reducer = ticketListSlice.reducer,\n  actions = ticketListSlice.actions;\nvar fetchTicketLoading = actions.fetchTicketLoading,\n  fetchTicketSuccess = actions.fetchTicketSuccess,\n  fetchTicketFail = actions.fetchTicketFail;\nexport { fetchTicketLoading, fetchTicketSuccess, fetchTicketFail };\nexport default reducer;","map":{"version":3,"names":["createSlice","initialState","tickets","isLoading","error","replyTicketError","searchTicketList","selectedTicket","replyMsg","ticketListSlice","name","reducers","fetchTicketLoading","state","fetchTicketSuccess","action","payload","fetchTicketFail","reducer","actions"],"sources":["/home/jackson/Desktop/crm-ticket/crm-ticket/CrmFrontEnd/src/page/ticket-listing/ticketSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  tickets: [],\n  isLoading: false,\n  error: \"\",\n  replyTicketError: \"\",\n  searchTicketList: [],\n  selectedTicket: {},\n  replyMsg: \"\",\n};\n\nconst ticketListSlice = createSlice({\n  name: \"ticketList\",\n  initialState,\n  reducers: {\n    fetchTicketLoading: (state) => {\n      state.isLoading = true;\n    },\n    fetchTicketSuccess: (state, action) => {\n      state.tickets = action.payload;\n      state.searchTicketList = action.payload;\n      state.isLoading = false;\n    },\n    fetchTicketFail: (state, { payload }) => {\n      state.isLoading = false;\n      state.error = payload;\n    },\n    // searchTickets: (state, { payload }) => {\n    //   state.searchTicketList = state.tickets.filter((row) => {\n    //     if (!payload) return row;\n\n    //     return row.subject.toLowerCase().includes(payload.toLowerCase());\n    //   });\n    // },\n    // fetchSingleTicketLoading: (state) => {\n    //   state.isLoading = true;\n    // },\n    // fetchSingleTicketSuccess: (state, { payload }) => {\n    //   state.selectedTicket = payload;\n    //   state.isLoading = false;\n    //   state.error = \"\";\n    // },\n    // fetchSingleTicketFail: (state, { payload }) => {\n    //   state.isLoading = false;\n    //   state.error = payload;\n    // },\n    // replyTicketLoading: (state) => {\n    //   state.isLoading = true;\n    // },\n    // replyTicketSuccess: (state, { payload }) => {\n    //   state.isLoading = false;\n    //   state.error = \"\";\n    //   state.replyMsg = payload;\n    // },\n    // replyTicketFail: (state, { payload }) => {\n    //   state.isLoading = false;\n    //   state.replyTicketError = payload;\n    // },\n    // closeTicketLoading: (state) => {\n    //   state.isLoading = true;\n    // },\n    // closeTicketSuccess: (state, { payload }) => {\n    //   state.isLoading = false;\n    //   state.error = \"\";\n    //   state.replyMsg = payload;\n    // },\n    // closeTicketFail: (state, { payload }) => {\n    //   state.isLoading = false;\n    //   state.error = payload;\n    // },\n    // resetResponseMsg: (state) => {\n    //   state.isLoading = false;\n    //   state.replyTicketError = \"\";\n    //   state.replyMsg = \"\";\n    // },\n  },\n});\n\nconst { reducer, actions } = ticketListSlice;\n\nexport const {\n  fetchTicketLoading,\n  fetchTicketSuccess,\n  fetchTicketFail,\n  // fetchSingleTicketLoading,\n  // fetchSingleTicketSuccess,\n  // fetchSingleTicketFail,\n  // replyTicketLoading,\n  // replyTicketSuccess,\n  // replyTicketFail,\n  // closeTicketLoading,\n  // closeTicketSuccess,\n  // closeTicketFail,\n  // searchTickets,\n  // resetResponseMsg,\n} = actions;\n\nexport default reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,IAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,EAAE;EACXC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE,EAAE;EACTC,gBAAgB,EAAE,EAAE;EACpBC,gBAAgB,EAAE,EAAE;EACpBC,cAAc,EAAE,CAAC,CAAC;EAClBC,QAAQ,EAAE;AACZ,CAAC;AAED,IAAMC,eAAe,GAAGT,WAAW,CAAC;EAClCU,IAAI,EAAE,YAAY;EAClBT,YAAY,EAAZA,YAAY;EACZU,QAAQ,EAAE;IACRC,kBAAkB,EAAE,4BAACC,KAAK,EAAK;MAC7BA,KAAK,CAACV,SAAS,GAAG,IAAI;IACxB,CAAC;IACDW,kBAAkB,EAAE,4BAACD,KAAK,EAAEE,MAAM,EAAK;MACrCF,KAAK,CAACX,OAAO,GAAGa,MAAM,CAACC,OAAO;MAC9BH,KAAK,CAACP,gBAAgB,GAAGS,MAAM,CAACC,OAAO;MACvCH,KAAK,CAACV,SAAS,GAAG,KAAK;IACzB,CAAC;IACDc,eAAe,EAAE,yBAACJ,KAAK,QAAkB;MAAA,IAAdG,OAAO,QAAPA,OAAO;MAChCH,KAAK,CAACV,SAAS,GAAG,KAAK;MACvBU,KAAK,CAACT,KAAK,GAAGY,OAAO;IACvB;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;AACF,CAAC,CAAC;AAAC,IAEKE,OAAO,GAAcT,eAAe,CAApCS,OAAO;EAAEC,OAAO,GAAKV,eAAe,CAA3BU,OAAO;AAAA,IAGtBP,kBAAkB,GAchBO,OAAO,CAdTP,kBAAkB;EAClBE,kBAAkB,GAahBK,OAAO,CAbTL,kBAAkB;EAClBG,eAAe,GAYbE,OAAO,CAZTF,eAAe;AAAA;AAcjB,eAAeC,OAAO"},"metadata":{},"sourceType":"module"}