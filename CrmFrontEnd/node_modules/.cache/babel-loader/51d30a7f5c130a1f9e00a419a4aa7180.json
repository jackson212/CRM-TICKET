{"ast":null,"code":"import _regeneratorRuntime from \"/home/jackson/Desktop/crm-ticket/crm-ticket/CrmFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jackson/Desktop/crm-ticket/crm-ticket/CrmFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { getAllTickets, getSingleTicket } from '../../api/ticketApi';\nimport { fetchTicketLoading, fetchTicketSuccess, fetchTicketFail, searchTickets, fetchSingleTicketFail, fetchSingleTicketLoading, fetchSingleTicketSuccess, replyTicketFail, replyTicketSuccess, replyTicketError, replyTicketLoading } from \"./ticketSlice\";\n\n// import {\n//   getAllTickets,\n//   getSingleTicket,\n//   updateReplyTicket,\n//   updateTicketStatusClosed,\n// } from \"../../api/ticketApi\";\n\nexport var fetchAllTickets = function fetchAllTickets() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(fetchTicketLoading());\n              _context.prev = 1;\n              _context.next = 4;\n              return getAllTickets();\n            case 4:\n              result = _context.sent;\n              dispatch(fetchTicketSuccess(result.data.result));\n              _context.next = 11;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch(fetchTicketFail(_context.t0.message));\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var filterSearchTicket = function filterSearchTicket(str) {\n  return function (dispatch) {\n    dispatch(searchTickets(str));\n  };\n};\nexport var fetchsingleTickets = function fetchsingleTickets(id) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch(fetchSingleTicketLoading());\n              _context2.prev = 1;\n              _context2.next = 4;\n              return getSingleTicket(id);\n            case 4:\n              result = _context2.sent;\n              dispatch(fetchSingleTicketSuccess(result.data.result[0]));\n              _context2.next = 11;\n              break;\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              dispatch(fetchSingleTicketFail(_context2.t0.message));\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8]]);\n    }));\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\n\n// export const fetchAllTickets = () => async (dispatch) => {\n//   dispatch(fetchTicketLoading());\n//   try {\n//     const result = await getAllTickets();\n//     result.data.result.length &&\n//       dispatch(fetchTicketSuccess(result.data.result));\n//   } catch (error) {\n//     dispatch(fetchTicketFail(error.message));\n//   }\n// };\n\n// export const filterSerachTicket = (str) => (dispatch) => {\n//   dispatch(searchTickets(str));\n// };\n\n// //Actions for single ticket only\n// export const fetchSingleTicket = (_id) => async (dispatch) => {\n//   dispatch(fetchSingleTicketLoading());\n//   try {\n//     const result = await getSingleTicket(_id);\n//     dispatch(\n//       fetchSingleTicketSuccess(\n//         result.data.result.length && result.data.result[0]\n//       )\n//     );\n//   } catch (error) {\n//     dispatch(fetchSingleTicketFail(error.message));\n//   }\n// };\n\n// //Actions for replying on single ticket\n// export const replyOnTicket = (_id, msgObj) => async (dispatch) => {\n//   dispatch(replyTicketLoading());\n//   try {\n//     const result = await updateReplyTicket(_id, msgObj);\n//     console.log(result);\n//     if (result.status === \"error\") {\n//       return dispatch(replyTicketFail(result.message));\n//     }\n\n//     dispatch(fetchSingleTicket(_id));\n\n//     dispatch(replyTicketSuccess(result.message));\n//   } catch (error) {\n//     console.log(error.message);\n//     dispatch(replyTicketFail(error.message));\n//   }\n// };\n// //Actions for closing ticket\n// export const closeTicket = (_id) => async (dispatch) => {\n//   dispatch(closeTicketLoading());\n//   try {\n//     const result = await updateTicketStatusClosed(_id);\n//     if (result.status === \"error\") {\n//       return dispatch(closeTicketFail(result.message));\n//     }\n\n//     dispatch(fetchSingleTicket(_id));\n\n//     dispatch(closeTicketSuccess(\"Status Updated successfully\"));\n//   } catch (error) {\n//     console.log(error.message);\n//     dispatch(closeTicketFail(error.message));\n//   }\n// };","map":{"version":3,"names":["axios","getAllTickets","getSingleTicket","fetchTicketLoading","fetchTicketSuccess","fetchTicketFail","searchTickets","fetchSingleTicketFail","fetchSingleTicketLoading","fetchSingleTicketSuccess","replyTicketFail","replyTicketSuccess","replyTicketError","replyTicketLoading","fetchAllTickets","dispatch","result","data","message","filterSearchTicket","str","fetchsingleTickets","id"],"sources":["/home/jackson/Desktop/crm-ticket/crm-ticket/CrmFrontEnd/src/page/ticket-listing/TicketAction.js"],"sourcesContent":["import axios from \"axios\";\n\nimport {getAllTickets,getSingleTicket} from '../../api/ticketApi'\nimport {\n    fetchTicketLoading,\n    fetchTicketSuccess,\n    fetchTicketFail,\n    searchTickets,\n    fetchSingleTicketFail,\nfetchSingleTicketLoading,\nfetchSingleTicketSuccess,\nreplyTicketFail,\nreplyTicketSuccess,\nreplyTicketError,\nreplyTicketLoading\n  } from \"./ticketSlice\";\n  \n  // import {\n  //   getAllTickets,\n  //   getSingleTicket,\n  //   updateReplyTicket,\n  //   updateTicketStatusClosed,\n  // } from \"../../api/ticketApi\";\n  \n\n export const fetchAllTickets = () => async (dispatch) => {\n    dispatch(fetchTicketLoading());\n    try {\n      const result = await getAllTickets();\n     \n     \n     \n   \n     dispatch(fetchTicketSuccess(result.data.result));\n       \n    \n\n    } catch (error) {\n      dispatch(fetchTicketFail(error.message));\n    }\n  };\n\n\n  export const filterSearchTicket = (str) => (dispatch) => {\n    dispatch(searchTickets(str));\n  };\n  \n\n\n  export const fetchsingleTickets = (id) => async (dispatch) => {\n    dispatch(fetchSingleTicketLoading());\n    try {\n      const result = await getSingleTicket(id);\n     \n     \n     \n   \n     dispatch(fetchSingleTicketSuccess(result.data.result[0]));\n       \n    \n\n    } catch (error) {\n      dispatch(fetchSingleTicketFail(error.message));\n    }\n  };\n\n\n\n\n\n\n\n\n  // export const fetchAllTickets = () => async (dispatch) => {\n  //   dispatch(fetchTicketLoading());\n  //   try {\n  //     const result = await getAllTickets();\n  //     result.data.result.length &&\n  //       dispatch(fetchTicketSuccess(result.data.result));\n  //   } catch (error) {\n  //     dispatch(fetchTicketFail(error.message));\n  //   }\n  // };\n  \n  // export const filterSerachTicket = (str) => (dispatch) => {\n  //   dispatch(searchTickets(str));\n  // };\n  \n  // //Actions for single ticket only\n  // export const fetchSingleTicket = (_id) => async (dispatch) => {\n  //   dispatch(fetchSingleTicketLoading());\n  //   try {\n  //     const result = await getSingleTicket(_id);\n  //     dispatch(\n  //       fetchSingleTicketSuccess(\n  //         result.data.result.length && result.data.result[0]\n  //       )\n  //     );\n  //   } catch (error) {\n  //     dispatch(fetchSingleTicketFail(error.message));\n  //   }\n  // };\n  \n  // //Actions for replying on single ticket\n  // export const replyOnTicket = (_id, msgObj) => async (dispatch) => {\n  //   dispatch(replyTicketLoading());\n  //   try {\n  //     const result = await updateReplyTicket(_id, msgObj);\n  //     console.log(result);\n  //     if (result.status === \"error\") {\n  //       return dispatch(replyTicketFail(result.message));\n  //     }\n  \n  //     dispatch(fetchSingleTicket(_id));\n  \n  //     dispatch(replyTicketSuccess(result.message));\n  //   } catch (error) {\n  //     console.log(error.message);\n  //     dispatch(replyTicketFail(error.message));\n  //   }\n  // };\n  // //Actions for closing ticket\n  // export const closeTicket = (_id) => async (dispatch) => {\n  //   dispatch(closeTicketLoading());\n  //   try {\n  //     const result = await updateTicketStatusClosed(_id);\n  //     if (result.status === \"error\") {\n  //       return dispatch(closeTicketFail(result.message));\n  //     }\n  \n  //     dispatch(fetchSingleTicket(_id));\n  \n  //     dispatch(closeTicketSuccess(\"Status Updated successfully\"));\n  //   } catch (error) {\n  //     console.log(error.message);\n  //     dispatch(closeTicketFail(error.message));\n  //   }\n  // };"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAAQC,aAAa,EAACC,eAAe,QAAO,qBAAqB;AACjE,SACIC,kBAAkB,EAClBC,kBAAkB,EAClBC,eAAe,EACfC,aAAa,EACbC,qBAAqB,EACzBC,wBAAwB,EACxBC,wBAAwB,EACxBC,eAAe,EACfC,kBAAkB,EAClBC,gBAAgB,EAChBC,kBAAkB,QACT,eAAe;;AAEtB;AACA;AACA;AACA;AACA;AACA;;AAGD,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAe;EAAA;IAAA,oEAAS,iBAAOC,QAAQ;MAAA;MAAA;QAAA;UAAA;YAAA;cACjDA,QAAQ,CAACZ,kBAAkB,EAAE,CAAC;cAAC;cAAA;cAAA,OAERF,aAAa,EAAE;YAAA;cAA9Be,MAAM;cAKbD,QAAQ,CAACX,kBAAkB,CAACY,MAAM,CAACC,IAAI,CAACD,MAAM,CAAC,CAAC;cAAC;cAAA;YAAA;cAAA;cAAA;cAKhDD,QAAQ,CAACV,eAAe,CAAC,YAAMa,OAAO,CAAC,CAAC;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAE5C;IAAA;MAAA;IAAA;EAAA;AAAA;AAGD,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,CAAIC,GAAG;EAAA,OAAK,UAACL,QAAQ,EAAK;IACvDA,QAAQ,CAACT,aAAa,CAACc,GAAG,CAAC,CAAC;EAC9B,CAAC;AAAA;AAID,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,CAAIC,EAAE;EAAA;IAAA,qEAAK,kBAAOP,QAAQ;MAAA;MAAA;QAAA;UAAA;YAAA;cACvDA,QAAQ,CAACP,wBAAwB,EAAE,CAAC;cAAC;cAAA;cAAA,OAEdN,eAAe,CAACoB,EAAE,CAAC;YAAA;cAAlCN,MAAM;cAKbD,QAAQ,CAACN,wBAAwB,CAACO,MAAM,CAACC,IAAI,CAACD,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;cAAC;cAAA;YAAA;cAAA;cAAA;cAKzDD,QAAQ,CAACR,qBAAqB,CAAC,aAAMW,OAAO,CAAC,CAAC;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAElD;IAAA;MAAA;IAAA;EAAA;AAAA;;AASD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}