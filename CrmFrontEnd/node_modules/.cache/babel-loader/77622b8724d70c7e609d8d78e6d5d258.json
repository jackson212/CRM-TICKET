{"ast":null,"code":"import _regeneratorRuntime from \"/home/jackson/Desktop/crm-ticket/crm-ticket/CrmFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jackson/Desktop/crm-ticket/crm-ticket/CrmFrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { getUserPending, getUserSuccess, getUserFail } from \"./userSlice\";\nimport { fetchUser } from \"../../api/userApi\";\nexport var getUserProfile = function getUserProfile() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                dispatch(getUserPending());\n\n                // const result = await fetchUser();\n\n                // if (result.user && result.user._id)\n                //   return dispatch(getUserSuccess(result.user));\n\n                // dispatch(getUserFail(\"User is not found\"));\n              } catch (error) {\n                dispatch(getUserFail(error));\n              }\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"names":["getUserPending","getUserSuccess","getUserFail","fetchUser","getUserProfile","dispatch","error"],"sources":["/home/jackson/Desktop/crm-ticket/crm-ticket/CrmFrontEnd/src/page/dashboard/userAction.js"],"sourcesContent":["import { getUserPending, getUserSuccess, getUserFail } from \"./userSlice\";\nimport { fetchUser } from \"../../api/userApi\";\n\nexport const getUserProfile = () => async (dispatch) => {\n  try {\n    dispatch(getUserPending());\n\n    // const result = await fetchUser();\n\n    // if (result.user && result.user._id)\n    //   return dispatch(getUserSuccess(result.user));\n\n    // dispatch(getUserFail(\"User is not found\"));\n  } catch (error) {\n    dispatch(getUserFail(error));\n  }\n};"],"mappings":";;AAAA,SAASA,cAAc,EAAEC,cAAc,EAAEC,WAAW,QAAQ,aAAa;AACzE,SAASC,SAAS,QAAQ,mBAAmB;AAE7C,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAc;EAAA;IAAA,oEAAS,iBAAOC,QAAQ;MAAA;QAAA;UAAA;YAAA;cACjD,IAAI;gBACFA,QAAQ,CAACL,cAAc,EAAE,CAAC;;gBAE1B;;gBAEA;gBACA;;gBAEA;cACF,CAAC,CAAC,OAAOM,KAAK,EAAE;gBACdD,QAAQ,CAACH,WAAW,CAACI,KAAK,CAAC,CAAC;cAC9B;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACF;IAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}